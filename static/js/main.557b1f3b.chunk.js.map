{"version":3,"sources":["images/clarky.jpg","images/dumpTruck.jpg","images/backyard.jpg","components/NavBar.js","components/ImageCard.js","components/pages/Home.js","components/pages/Contact.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","sticky","scrolling","expand","className","Brand","to","process","NavItem","Toggle","aria-controls","Collapse","id","Nav","activeClassName","exact","React","Component","ImageCard","props","Card","Img","variant","src","img","Text","text","Home","Container","Row","spy","clark","bottom","dumpTruck","right","backyard","Contact","About","App","style","backgroundColor","path","component","from","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,0PCiC5BC,E,iLA1BP,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,WAAS,EAACC,OAAO,KAAKC,UAAU,aACjD,kBAACJ,EAAA,EAAOK,MAAR,KACI,kBAAC,gBAAD,CAAeC,GAAIC,UAA8BH,UAAU,oBACvD,kBAACI,EAAA,EAAD,iBAGR,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,wBAAwBN,UAAU,iBAC/D,kBAACJ,EAAA,EAAOW,SAAR,CAAiBC,GAAG,wBAAwBR,UAAU,uBAClD,kBAACS,EAAA,EAAD,KACI,kBAAC,gBAAD,CAAeP,GAAIC,UAA8BH,UAAU,cAAcU,gBAAgB,SAASC,OAAK,GACnG,kBAACP,EAAA,EAAD,cAEJ,kBAAC,gBAAD,CAAeF,GAAIC,eAAmCH,UAAU,cAAcU,gBAAgB,SAASC,OAAK,GACxG,kBAACP,EAAA,EAAD,eAEJ,kBAAC,gBAAD,CAAeF,GAAIC,iBAAqCH,UAAU,cAAcU,gBAAgB,SAASC,OAAK,GAC1G,kBAACP,EAAA,EAAD,wB,GAnBPQ,IAAMC,W,QCQZC,EATC,SAASC,GACrB,OACE,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,IAAN,CAAWC,QAAQ,MAAMC,IAAKJ,EAAMK,MACpC,kBAACJ,EAAA,EAAKK,KAAN,CAAWrB,UAAU,mCAAmCe,EAAMO,Q,2EC6BxDC,EA3BL,WACJ,OACE,yBAAKvB,UAAU,OACX,yBAAKA,UAAU,iBACd,kDACA,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKzB,UAAU,qCACb,kBAAC,OAAD,CAAM0B,KAAG,GACP,kBAAC,EAAD,CAAWN,IAAKO,IAAOL,KAAM,ocAGjC,kBAACG,EAAA,EAAD,CAAKzB,UAAU,qCACb,kBAAC,SAAD,CAAQ4B,QAAM,EAAEF,KAAG,GACjB,kBAAC,EAAD,CAAWN,IAAKS,IAAYP,KAAM,ueAGtC,kBAACG,EAAA,EAAD,CAAKzB,UAAU,qCACb,kBAAC,SAAD,CAAQ4B,QAAM,EAACE,OAAK,EAACJ,KAAG,GACtB,kBAAC,EAAD,CAAWN,IAAKW,IAAUT,KAAM,omBChBpCU,EAVF,WACV,OACE,yBAAKhC,UAAU,OACX,4BAAQA,UAAU,iBAClB,wCCMMiC,EAVJ,WACR,OACE,yBAAKjC,UAAU,OACX,4BAAQA,UAAU,iBAChB,yD,QCkBGkC,E,iLAdX,OACE,yBAAKC,MAAO,CAACC,gBAAgB,YAC3B,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMlC,UAA8BmC,UAAWf,EAAMZ,OAAK,IACjE,kBAAC,IAAD,CAAO0B,KAAMlC,eAAmCmC,UAAWL,IAC3D,kBAAC,IAAD,CAAOI,KAAMlC,iBAAqCmC,UAAWN,IAC7D,kBAAC,IAAD,CAAUO,KAAK,IAAIrC,GAAIC,kB,GATfS,IAAMC,WCIJ2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OAAO,kBAAC,gBAAD,CAAeC,SAAU5C,UAAwB,kBAAC,EAAD,OAAwB6C,SAASC,eAAe,SD2H3G,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.557b1f3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clarky.c1e1d48d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dumpTruck.fe97989b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backyard.7c982d05.jpg\";","import React from 'react';\nimport {Navbar, Nav, NavItem} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nclass NavBar extends React.Component {\n    render(){\n        return (\n            <Navbar sticky=\"top\" scrolling expand=\"lg\" className=\"navHeader\">\n                <Navbar.Brand >\n                    <LinkContainer to={process.env.PUBLIC_URL + '/'} className=\"navBrandItemText\">\n                        <NavItem>Iron X</NavItem>\n                    </LinkContainer>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"navbar-light\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                    <Nav>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>Home</NavItem>\n                        </LinkContainer>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/about'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>About</NavItem>\n                        </LinkContainer>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/contact'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>Contact</NavItem>\n                        </LinkContainer>                        \n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n};\n\nexport default NavBar;","import React from 'react';\nimport {Card} from 'react-bootstrap';\n\n\nlet ImageCard = function(props){\n    return (\n      <Card >\n          <Card.Img  variant=\"top\" src={props.img}/>\n          <Card.Text className=\"primaryBackGround imageCardText\">{props.text}</Card.Text>\n      </Card>\n    )\n }\n\nexport default ImageCard;","import React from 'react';\nimport ImageCard from '../ImageCard';\nimport {Container, Row} from 'react-bootstrap';\nimport {Zoom, Bounce, Rotate} from 'react-reveal'; // Importing Zoom effect\n\n\nimport clark from '../../images/clarky.jpg'\nimport dumpTruck from '../../images/dumpTruck.jpg'\nimport backyard from '../../images/backyard.jpg'\n\nlet Home = function(){\n       return (\n         <div className=\"App\">\n             <div className=\"App-container\">\n              <p>IronX Professionals</p>\n              <Container>\n                <Row className=\"justify-content-md-center gridRow\">\n                  <Zoom spy>\n                    <ImageCard img={clark} text={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"} />\n                  </Zoom>\n                </Row>\n                <Row className=\"justify-content-md-center gridRow\">\n                  <Bounce bottom  spy>\n                    <ImageCard img={dumpTruck}  text={\"Praesent semper feugiat nibh sed pulvinar proin. Feugiat in fermentum posuere urna nec tincidunt. A iaculis at erat pellentesque. Donec massa sapien faucibus et. Eget mauris pharetra et ultrices neque. Facilisis magna etiam tempor orci eu lobortis elementum. Pellentesque pulvinar pellentesque habitant morbi. Mattis aliquam faucibus purus in massa tempor nec feugiat. Dui nunc mattis enim ut. Imperdiet proin fermentum leo vel orci porta non. Ac felis donec et odio pellentesque.\"} />\n                  </Bounce>\n                </Row>\n                <Row className=\"justify-content-md-center gridRow\">\n                  <Rotate bottom right spy>\n                    <ImageCard img={backyard} text={\"Volutpat consequat mauris nunc congue nisi. Sit amet nisl purus in mollis nunc sed id. Felis bibendum ut tristique et egestas quis ipsum suspendisse. Dictum at tempor commodo ullamcorper. Tortor posuere ac ut consequat semper viverra. Adipiscing tristique risus nec feugiat in. Vulputate mi sit amet mauris. Porttitor massa id neque aliquam vestibulum. Dignissim enim sit amet venenatis urna cursus eget. Suspendisse faucibus interdum posuere lorem. At varius vel pharetra vel turpis nunc eget lorem dolor. In arcu cursus euismod quis viverra nibh. Diam vulputate ut pharetra sit amet aliquam id diam.\"} />\n                  </Rotate>\n                </Row>\n              </Container>\n             </div>\n         </div>\n       )\n    }\n \n export default Home;","import React from 'react';\n\nlet Contact = function(){\n    return (\n      <div className=\"App\">\n          <header className=\"App-container\">\n          <p>Callus</p>\n          </header>\n      </div>\n    )\n}\n \n export default Contact;","import React from 'react';\n\nlet About = function(){\n    return (\n      <div className=\"App\">\n          <header className=\"App-container\">\n            <p>WE love pizza and steak</p>\n          </header>\n      </div>\n    )\n}\n \n export default About;","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport Home from './components/pages/Home';\nimport Contact from './components/pages/Contact';\nimport About from './components/pages/About';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{backgroundColor:'#252c3a'}}>\n        <NavBar/>\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/'} component={Home} exact/>\n          <Route path={process.env.PUBLIC_URL + '/about'} component={About} />\n          <Route path={process.env.PUBLIC_URL + '/contact'} component={Contact} />\n          <Redirect from='*' to={process.env.PUBLIC_URL + '/'} />\n        </Switch>\n      </div>\n    )\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App/></BrowserRouter>, document.getElementById('root'))\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
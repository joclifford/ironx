{"version":3,"sources":["components/NavBar.js","utils/Images.js","components/CarouselCard.js","components/pages/Home.js","components/pages/Contact.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","sticky","expand","className","collapseOnSelect","Brand","to","process","NavItem","alt","src","style","height","width","Toggle","aria-controls","Collapse","id","Nav","activeClassName","exact","React","Component","Images","srcset","desc","group","CarouselCard","props","imagesToShow","forEach","item","index","push","Card","children","showThumbs","infiniteLoop","autoPlay","swipeable","interval","map","title","description","key","sizes","Home","Contact","About","App","backgroundColor","path","component","from","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oUAkCeA,E,iLA1BP,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MAAMC,OAAO,KAAKC,UAAU,YAAYC,kBAAkB,GACrE,kBAACJ,EAAA,EAAOK,MAAR,KACI,kBAAC,gBAAD,CAAeC,GAAIC,UAA8BJ,UAAU,oBACvD,kBAACK,EAAA,EAAD,KAAS,yBAAKC,IAAI,QAAQC,IAAI,sBAAsBC,MAAO,CAACC,OAAO,OAAOC,MAAM,aAGxF,kBAACb,EAAA,EAAOc,OAAR,CAAeC,gBAAc,wBAAwBZ,UAAU,iBAC/D,kBAACH,EAAA,EAAOgB,SAAR,CAAiBC,GAAG,wBAAwBd,UAAU,uBAClD,kBAACe,EAAA,EAAD,KACI,kBAAC,gBAAD,CAAeZ,GAAIC,UAA8BJ,UAAU,cAAcgB,gBAAgB,SAASC,OAAK,GACnG,kBAACZ,EAAA,EAAD,cAEJ,kBAAC,gBAAD,CAAeF,GAAIC,eAAmCJ,UAAU,cAAcgB,gBAAgB,SAASC,OAAK,GACxG,kBAACZ,EAAA,EAAD,eAEJ,kBAAC,gBAAD,CAAeF,GAAIC,iBAAqCJ,UAAU,cAAcgB,gBAAgB,SAASC,OAAK,GAC1G,kBAACZ,EAAA,EAAD,wB,GAnBPa,IAAMC,W,kBC2DZC,G,OAjEA,CACX,CACIb,IAAM,oCACNc,OAAS,2FACTC,KAAO,yCACPC,MAAQ,QACT,CACCF,OAAS,2BACTC,KAAO,uBACPC,MAAQ,QACT,CACCF,OAAS,2BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,8BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,+BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,2BACTC,KAAO,uBACPC,MAAQ,QACT,CACCF,OAAS,4BACTC,KAAO,uBACPC,MAAQ,QACT,CACCF,OAAS,6BACTC,KAAO,uBACPC,MAAQ,QACT,CACCF,OAAS,6BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,6BACTC,KAAO,uBACPC,MAAQ,QACT,CACCF,OAAS,2BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,4BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,4BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,4BACTC,KAAO,uBACPC,MAAQ,QACV,CACEF,OAAS,4BACTC,KAAO,uBACPC,MAAQ,UCxBDC,EA5BI,SAASC,GACxB,IAAIC,EAAe,GAOnB,OALAN,EAAOO,SAAQ,SAAUC,EAAMC,GACvBD,EAAKL,QAAUE,EAAMF,OACrBG,EAAaI,KAAKF,MAItB,kBAACG,EAAA,EAAD,KACKN,EAAMO,SACP,kBAAC,WAAD,CAAUC,YAAY,EAAOC,cAAY,EAACC,UAAQ,EAACC,WAAW,EAAMC,SAAU,MAExEX,EAAaY,KAAI,cAAExB,GAAF,IAAMP,EAAN,EAAMA,IAAKc,EAAX,EAAWA,OAAQkB,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAA1B,OACb,6BACE,yBAAKC,IAAKlC,EAAKmC,MAAM,mCAAmCnC,IAAKA,EAAKc,OAAQA,EAAQkB,MAAOA,EAAOjC,IAAKkC,W,SCI7GG,EAtBL,WACJ,OACE,yBAAK3C,UAAU,OACX,yBAAKA,UAAU,iBACf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAeuB,MAAM,SACrB,kBAAC,EAAD,CAAeA,MAAM,QAClB,yBAAKvB,UAAU,oBAAf,qIAIH,kBAAC,EAAD,CAAeuB,MAAM,QACnB,yBAAKvB,UAAU,qBAAf,wJCND4C,EAVF,WACV,OACE,yBAAK5C,UAAU,OACX,4BAAQA,UAAU,iBAClB,wCCMM6C,EAVJ,WACR,OACE,yBAAK7C,UAAU,OACX,4BAAQA,UAAU,iBAChB,yD,QCkBG8C,E,iLAdX,OACE,yBAAKtC,MAAO,CAACuC,gBAAgB,YAC3B,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM5C,UAA8B6C,UAAWN,EAAM1B,OAAK,IACjE,kBAAC,IAAD,CAAO+B,KAAM5C,eAAmC6C,UAAWJ,IAC3D,kBAAC,IAAD,CAAOG,KAAM5C,iBAAqC6C,UAAWL,IAC7D,kBAAC,IAAD,CAAUM,KAAK,IAAI/C,GAAIC,kB,GATfc,IAAMC,WCIJgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OAAO,kBAAC,gBAAD,CAAeC,SAAUtD,UAAwB,kBAAC,EAAD,OAAwBuD,SAASC,eAAe,SD2H3G,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.37289c38.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav, NavItem} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nclass NavBar extends React.Component {\n    render(){\n        return (\n            <Navbar sticky=\"top\" expand=\"sm\" className=\"navHeader\" collapseOnSelect={true}>\n                <Navbar.Brand >\n                    <LinkContainer to={process.env.PUBLIC_URL + '/'} className=\"navBrandItemText\">\n                        <NavItem><img alt=\"IronX\" src='../images/icon1.png' style={{height:'50px',width:'50px'}}/></NavItem>\n                    </LinkContainer>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className=\"navbar-light\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                    <Nav>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>Home</NavItem>\n                        </LinkContainer>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/about'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>About</NavItem>\n                        </LinkContainer>\n                        <LinkContainer to={process.env.PUBLIC_URL + '/contact'} className=\"navItemText\" activeClassName=\"active\" exact>\n                            <NavItem>Contact</NavItem>\n                        </LinkContainer>                        \n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n};\n\nexport default NavBar;","const Images = [\n    {\n        src : '../images/Job1/SkidSteerLevel.jpg',\n        srcset : '../images/Job1/SkidSteerLevel1567.jpg 1567w, ../images/Job1/SkidSteerLevel4032.jpg 4032w',\n        desc : 'Frank Goulding Leveling out the ground',\n        group : 'job1'\n    }, {\n        srcset : '../images/Job2/Dump1.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    }, {\n        srcset : '../images/Job2/Dump2.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    },{\n        srcset : '../images/Job2/Flatten1.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    },{\n        srcset : '../images/Job2/Flattened.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    },{\n        srcset : '../images/Job2/After.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    }, {\n        srcset : '../images/Job2/After2.jpg',\n        desc : 'Description of Image',\n        group : 'job2'\n    }, {\n        srcset : '../images/Job3/Before1.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    } ,{\n        srcset : '../images/Job3/Before2.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    },{\n        srcset : '../images/Job3/Before3.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    } ,{\n        srcset : '../images/Job3/Rocks.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    },{\n        srcset : '../images/Job3/After1.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    },{\n        srcset : '../images/Job3/After2.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    },{\n        srcset : '../images/Job3/After3.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    },{\n        srcset : '../images/Job3/After4.jpg',\n        desc : 'Description of Image',\n        group : 'job3' \n    }\n]\n\nexport default Images;","import React from 'react';\nimport {Card} from 'react-bootstrap';\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nimport Images from '../utils/Images'\n\n\n\nlet CarouselCard = function(props){\n    let imagesToShow = [];\n\n    Images.forEach(function (item, index) {\n        if (item.group === props.group){\n            imagesToShow.push(item);\n        }\n    });\n    return (\n        <Card >\n            {props.children}\n            <Carousel showThumbs={false} infiniteLoop autoPlay swipeable={true} interval={7500}>\n                { \n                  imagesToShow.map(({id, src, srcset, title, description}) =>   \n                      <div >          \n                        <img key={src} sizes=\"(max-width: 4032px) 4032px,100vw\" src={src} srcset={srcset} title={title} alt={description} />\n                      </div>\n                 )\n                    \n                }\n       \n            </Carousel>\n            \n        </Card>\n    )\n}\n\n\nexport default CarouselCard;","import React from 'react';\nimport CarourselCard from '../CarouselCard';\n\nimport ReactPageScroller from 'react-page-scroller'\n\n\nlet Home = function(){\n       return (\n         <div className=\"App\" >\n             <div className=\"App-container\">\n             <ReactPageScroller >\n               <CarourselCard group='job1'/>\n               <CarourselCard group='job2'>\n                  <div className=\"CarouselTextLeft\">\n                   Expert driveway installation and flattening. Lorem ipsum dolor sit amet, justo illum cotidieque est cu, ea tantas evertitur duo. \n                  </div>\n               </CarourselCard>\n               <CarourselCard group='job3'>\n                 <div className=\"CarouselTextRight\">\n                   Resources brought right to site for immediate installation. Lorem ipsum dolor sit amet, justo illum cotidieque est cu, ea tantas evertitur duo. \n                  </div>\n               </CarourselCard>\n             </ReactPageScroller>\n             </div>\n         </div>\n       )\n    }\n \n export default Home;","import React from 'react';\n\nlet Contact = function(){\n    return (\n      <div className=\"App\">\n          <header className=\"App-container\">\n          <p>Callus</p>\n          </header>\n      </div>\n    )\n}\n \n export default Contact;","import React from 'react';\n\nlet About = function(){\n    return (\n      <div className=\"App\">\n          <header className=\"App-container\">\n            <p>WE love pizza and steak</p>\n          </header>\n      </div>\n    )\n}\n \n export default About;","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport Home from './components/pages/Home';\nimport Contact from './components/pages/Contact';\nimport About from './components/pages/About';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{backgroundColor:'#252c3a'}}>\n        <NavBar/>\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/'} component={Home} exact/>\n          <Route path={process.env.PUBLIC_URL + '/about'} component={About} />\n          <Route path={process.env.PUBLIC_URL + '/contact'} component={Contact} />\n          <Redirect from='*' to={process.env.PUBLIC_URL + '/'} />\n        </Switch>\n      </div>\n    )\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App/></BrowserRouter>, document.getElementById('root'))\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}